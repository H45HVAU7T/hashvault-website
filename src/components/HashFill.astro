---
const { textSize } = Astro.props;
---

<div
  class=`flex-1 font-brutal font-black ${textSize} tracking-wider overflow-hidden`
>
  <div class="slashFill leading-none whitespace-nowrap">/</div>
</div>

<script>
  function updateSlashFills() {
    const elements = document.querySelectorAll(".slashFill");

    elements.forEach((element) => {
      const container = element?.parentElement;
      if (!element || !container) return;

      const containerWidth = container.offsetWidth;

      // Use font measurement instead of fixed char width
      const testChar = document.createElement("span");
      testChar.textContent = "/";
      testChar.style.visibility = "hidden";
      testChar.style.position = "absolute";
      testChar.style.whiteSpace = "nowrap";
      testChar.style.fontFamily = getComputedStyle(element).fontFamily;
      testChar.style.fontSize = getComputedStyle(element).fontSize;
      container.appendChild(testChar);

      const charWidth = testChar.getBoundingClientRect().width;
      container.removeChild(testChar);

      const slashCount = Math.floor(containerWidth / charWidth);
      element.textContent = "/".repeat(slashCount);
    });
  }

  // Wait until custom elements are rendered
  window.addEventListener("DOMContentLoaded", () => {
    // Give the browser a frame to finish replacing <slash-fill> elements
    requestAnimationFrame(() => {
      updateSlashFills();
      window.addEventListener("resize", updateSlashFills);
    });
  });
</script>
