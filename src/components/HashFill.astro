---
const { textSize } = Astro.props;
---

<div
  class=`flex-1 font-brutal font-black ${textSize} tracking-wider overflow-hidden min-w-0`
>
  <div class="slashFill leading-none whitespace-nowrap">/</div>
</div>

<script>
  function updateSlashFills() {
    const elements = document.querySelectorAll(".slashFill");

    elements.forEach((element) => {
      const container = element?.parentElement;
      if (!element || !container) return;

      // Temporarily clear text to measure true container width
      const originalText = element.textContent;
      element.textContent = "";

      const availableWidth = container.offsetWidth;

      // Measure single character width
      const testChar = document.createElement("span");
      testChar.textContent = "/";
      testChar.style.visibility = "hidden";
      testChar.style.position = "absolute";
      testChar.style.whiteSpace = "nowrap";
      testChar.style.fontFamily = getComputedStyle(element).fontFamily;
      testChar.style.fontSize = getComputedStyle(element).fontSize;
      testChar.style.fontWeight = getComputedStyle(element).fontWeight;
      testChar.style.letterSpacing = getComputedStyle(element).letterSpacing;

      container.appendChild(testChar);
      const charWidth = testChar.getBoundingClientRect().width;
      container.removeChild(testChar);

      const slashCount = Math.floor(availableWidth / charWidth);
      element.textContent = "/".repeat(Math.max(1, slashCount));
    });
  }

  // On load + resize
  document.addEventListener("DOMContentLoaded", () => {
    const elements = document.querySelectorAll(".slashFill");

    elements.forEach((element) => {
      const container = element.parentElement;

      updateSlashFills();

      if (container) {
        const observer = new ResizeObserver(updateSlashFills);
        observer.observe(container);
      }
    });

    window.addEventListener("resize", updateSlashFills);
  });
</script>
